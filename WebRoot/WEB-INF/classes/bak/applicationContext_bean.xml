<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- XML文件说明：spring 的bean配置，用于依赖注入 -->

	<!-- 注意，dao，serveice，action的注入，都是针对具体的实现类来注入 
		 调用顺序：action调用service,service调用dao,dao负责和数据库打交道 
		 所以，对应的依赖注入顺序是: 
		 	dao层依赖sessionFactory，需要注入sessionFactory; 
		 	service层依赖dao，需要注入dao; 
		 	action层依赖service，需要注入service 
	-->

	<!-- Student 类相关的bean -->
	<!-- Dao层：Dao层是没有状态的，因此将其scope配置成singleton，默认的也是使用此方法 -->
	<bean id="studentDao" class="com.wxweven.dao.impl.StudentDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 业务层Service -->
	<bean id="studentService" class="com.wxweven.service.impl.StudentServiceImpl">
		<property name="studentDao" ref="studentDao" />
	</bean>
	<!-- 控制层Action 所有的action要设置成prototype性质的，可每次访问生成一个实例，否则默认为singleton，只生成一个实例 -->
	<bean id="studentAction" class="com.wxweven.action.StudentAction" scope="prototype">
		<property name="studentService" ref="studentService" />
	</bean>

	<!-- service层注入：注入用户订单操作类 -->
	<bean id="coService" class="com.wxweven.service.impl.CustomerOrderService">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- action层注入：注入CustomerOrderAction的属性 -->
	<bean id="coAction" class="com.wxweven.action.CustomerOrderAction">
		<property name="coService" ref="coService" />
	</bean>

	<!-- service层注入：注入类别操作类 -->
	<bean id="catService" class="com.wxweven.service.impl.CategoryService">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- action层注入：注入CustomerOrderAction的属性 -->
	<bean id="catAction" class="com.wxweven.action.CategoryAction">
		<property name="catService" ref="catService" />
	</bean>

	<!-- service层注入：注入类别操作类 -->
	<bean id="ceService" class="com.wxweven.service.impl.CompanyEmployeeService">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- action层注入：注入CustomerOrderAction的属性 -->
	<bean id="ceAction" class="com.wxweven.action.CEAction">
		<property name="ceService" ref="ceService" />
	</bean>
	
	<!-- 测试注入的bean 
	<bean id="user" class="com.wxweven.test.User">
		<property name="name" value="even" />
	</bean>-->
	
</beans>

